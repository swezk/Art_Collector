{"version":3,"sources":["index.js"],"names":["document","getElementById"],"mappings":"2JAmEmBA,SAASC,eAAe,Q","file":"static/js/main.bdf734f5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// These imports won't work until you fix ./components/index.js\r\nimport {\r\n  Feature,\r\n  Loading,\r\n  Preview,\r\n  Search,\r\n  Title\r\n} from './components';\r\n\r\n// //const App \r\n//   /**\r\n//    * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\r\n//    * be made here, so create state pairs using useState() for:\r\n//    * \r\n//    * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\r\n//    * featuredResult, setFeaturedResult (default should be null)\r\n//    * isLoading, setIsLoading (default should be false)\r\n//    */\r\n\r\n//   const [searchResults, setSearchResults] = useState({info: {}, records: []})\r\n//   const [featuredResult, setFeaturedResult] = useState(null)\r\n//   const [isLoading, setIsLoading] = useState(false)\r\n\r\n\r\n  \r\n//   function App ({App}) {\r\n//   <div className=\"app\">,\r\n//     {/* <Title /> is static, doesn't need any props */}\r\n    \r\n\r\n//     <Title />\r\n//     {/* <Search /> needs props for setIsLoading and setSearchResults (trigger <Loading /> on search start/end, and transfer results to preview) */}\r\n//     {/* < Search /> */}\r\n//     <Search\r\n//      setIsLoading={setIsLoading}\r\n//      setSearchResults={setSearchResults}\r\n//    />\r\n    \r\n//     {/* <Preview /> needs props for searchResults, setIsLoading and setSearchResults (clicking prev/next buttons), and setFeaturedResult (clicking a preview) */}\r\n//     {/* <Preview /> */}\r\n    \r\n//     <Preview\r\n//      searchResults={searchResults}\r\n//      setIsLoading={setIsLoading}\r\n//      setSearchResults={setSearchResults}\r\n//      setFeaturedResult={setFeaturedResult}\r\n//    />\r\n    \r\n//     {/* <Feature\r\n//      featuredResult={featuredResult}\r\n//      setIsLoading={setIsLoading}\r\n//      setSearchResults={setSearchResults}\r\n//      />\r\n    \r\n//     <Loading\r\n//      isLoading={isLoading} */}\r\n//   </div>\r\n  \r\n// }\r\n\r\n/**\r\n * Boostrap the <App /> component into the '#app' element in the DOM,\r\n * using ReactDOM.render();\r\n */\r\nconst appElement = document.getElementById('app')\r\n//ReactDOM.render(<App/>, appElement)"],"sourceRoot":""}